// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`BrowseEventList renders correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <BrowseEventList
    events={
      Array [
        Object {
          "coords": Array [
            -24,
            153,
          ],
          "dateTime": "2018-09-07T14:12:15.112Z",
          "distance": 21,
          "id": "2",
          "image": "http://via.placeholder.com/100x100",
          "location": "Brisbane",
          "title": "title",
        },
      ]
    }
    onHoverEventCard={[Function]}
    overMarker="-1"
    title="test"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": "2",
    "nodeType": "class",
    "props": Object {
      "children": <WithStyles(BrowseEventCard)
        event={
          Object {
            "coords": Array [
              -24,
              153,
            ],
            "dateTime": "2018-09-07T14:12:15.112Z",
            "distance": 21,
            "id": "2",
            "image": "http://via.placeholder.com/100x100",
            "location": "Brisbane",
            "title": "title",
          }
        }
        onHoverEventCard={[Function]}
        overMarker="-1"
      />,
      "replace": false,
      "style": Object {
        "textDecoration": "none",
      },
      "to": "/event/2",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "event": Object {
          "coords": Array [
            -24,
            153,
          ],
          "dateTime": "2018-09-07T14:12:15.112Z",
          "distance": 21,
          "id": "2",
          "image": "http://via.placeholder.com/100x100",
          "location": "Brisbane",
          "title": "title",
        },
        "onHoverEventCard": [Function],
        "overMarker": "-1",
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": "2",
      "nodeType": "class",
      "props": Object {
        "children": <WithStyles(BrowseEventCard)
          event={
            Object {
              "coords": Array [
                -24,
                153,
              ],
              "dateTime": "2018-09-07T14:12:15.112Z",
              "distance": 21,
              "id": "2",
              "image": "http://via.placeholder.com/100x100",
              "location": "Brisbane",
              "title": "title",
            }
          }
          onHoverEventCard={[Function]}
          overMarker="-1"
        />,
        "replace": false,
        "style": Object {
          "textDecoration": "none",
        },
        "to": "/event/2",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "event": Object {
            "coords": Array [
              -24,
              153,
            ],
            "dateTime": "2018-09-07T14:12:15.112Z",
            "distance": 21,
            "id": "2",
            "image": "http://via.placeholder.com/100x100",
            "location": "Brisbane",
            "title": "title",
          },
          "onHoverEventCard": [Function],
          "overMarker": "-1",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
